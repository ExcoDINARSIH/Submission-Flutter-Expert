// Mocks generated by Mockito 5.3.0 from annotations
// in ditonton/test/presentation/bloc/tv_series_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/common/failure.dart' as _i6;
import 'package:ditonton/domain/entities/tv_series/tv_series.dart' as _i7;
import 'package:ditonton/domain/entities/tv_series/tv_series_detail.dart'
    as _i11;
import 'package:ditonton/domain/repositories/tv_series_repository.dart' as _i2;
import 'package:ditonton/domain/usecases/tv_series/get_now_playing_tv_series.dart'
    as _i4;
import 'package:ditonton/domain/usecases/tv_series/get_popular_tv_series.dart'
    as _i8;
import 'package:ditonton/domain/usecases/tv_series/get_top_rated_tv_series.dart'
    as _i9;
import 'package:ditonton/domain/usecases/tv_series/get_tv_series_detail.dart'
    as _i10;
import 'package:ditonton/domain/usecases/tv_series/get_tv_series_recommendations.dart'
    as _i12;
import 'package:ditonton/domain/usecases/tv_series/get_watchlist_series_status.dart'
    as _i14;
import 'package:ditonton/domain/usecases/tv_series/get_watchlist_tv_series.dart'
    as _i13;
import 'package:ditonton/domain/usecases/tv_series/remove_watchlist_series.dart'
    as _i15;
import 'package:ditonton/domain/usecases/tv_series/save_watchlist_series.dart'
    as _i16;
import 'package:ditonton/domain/usecases/tv_series/search_tv_series.dart'
    as _i17;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTVSeriesRepository_0 extends _i1.SmartFake
    implements _i2.TVSeriesRepository {
  _FakeTVSeriesRepository_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [GetNowPlayingTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingTVSeries extends _i1.Mock
    implements _i4.GetNowPlayingTVSeries {
  MockGetNowPlayingTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVSeriesRepository get repository => (super.noSuchMethod(
          Invocation.getter(#repository),
          returnValue:
              _FakeTVSeriesRepository_0(this, Invocation.getter(#repository)))
      as _i2.TVSeriesRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>>.value(
                      _FakeEither_1<_i6.Failure, List<_i7.TVSeries>>(
                          this, Invocation.method(#execute, []))))
          as _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>>);
}

/// A class which mocks [GetPopularTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTVSeries extends _i1.Mock
    implements _i8.GetPopularTVSeries {
  MockGetPopularTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVSeriesRepository get repository => (super.noSuchMethod(
          Invocation.getter(#repository),
          returnValue:
              _FakeTVSeriesRepository_0(this, Invocation.getter(#repository)))
      as _i2.TVSeriesRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>>.value(
                      _FakeEither_1<_i6.Failure, List<_i7.TVSeries>>(
                          this, Invocation.method(#execute, []))))
          as _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>>);
}

/// A class which mocks [GetTopRatedTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTVSeries extends _i1.Mock
    implements _i9.GetTopRatedTVSeries {
  MockGetTopRatedTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVSeriesRepository get repository => (super.noSuchMethod(
          Invocation.getter(#repository),
          returnValue:
              _FakeTVSeriesRepository_0(this, Invocation.getter(#repository)))
      as _i2.TVSeriesRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>>.value(
                      _FakeEither_1<_i6.Failure, List<_i7.TVSeries>>(
                          this, Invocation.method(#execute, []))))
          as _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>>);
}

/// A class which mocks [GetTVSeriesDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTVSeriesDetail extends _i1.Mock implements _i10.GetTVSeriesDetail {
  MockGetTVSeriesDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVSeriesRepository get repository => (super.noSuchMethod(
          Invocation.getter(#repository),
          returnValue:
              _FakeTVSeriesRepository_0(this, Invocation.getter(#repository)))
      as _i2.TVSeriesRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i11.TVSeriesDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue:
              _i5.Future<_i3.Either<_i6.Failure, _i11.TVSeriesDetail>>.value(
                  _FakeEither_1<_i6.Failure, _i11.TVSeriesDetail>(
                      this, Invocation.method(#execute, [id])))) as _i5
          .Future<_i3.Either<_i6.Failure, _i11.TVSeriesDetail>>);
}

/// A class which mocks [GetTVSeriesRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTVSeriesRecommendations extends _i1.Mock
    implements _i12.GetTVSeriesRecommendations {
  MockGetTVSeriesRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVSeriesRepository get repository => (super.noSuchMethod(
          Invocation.getter(#repository),
          returnValue:
              _FakeTVSeriesRepository_0(this, Invocation.getter(#repository)))
      as _i2.TVSeriesRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue:
                  _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>>.value(
                      _FakeEither_1<_i6.Failure, List<_i7.TVSeries>>(
                          this, Invocation.method(#execute, [id]))))
          as _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>>);
}

/// A class which mocks [GetWatchlistTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTVSeries extends _i1.Mock
    implements _i13.GetWatchlistTVSeries {
  MockGetWatchlistTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue:
                  _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>>.value(
                      _FakeEither_1<_i6.Failure, List<_i7.TVSeries>>(
                          this, Invocation.method(#execute, []))))
          as _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>>);
}

/// A class which mocks [GetWatchListSeriesStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListSeriesStatus extends _i1.Mock
    implements _i14.GetWatchListSeriesStatus {
  MockGetWatchListSeriesStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVSeriesRepository get repository => (super.noSuchMethod(
          Invocation.getter(#repository),
          returnValue:
              _FakeTVSeriesRepository_0(this, Invocation.getter(#repository)))
      as _i2.TVSeriesRepository);
  @override
  _i5.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: _i5.Future<bool>.value(false)) as _i5.Future<bool>);
}

/// A class which mocks [RemoveWatchlistSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistSeries extends _i1.Mock
    implements _i15.RemoveWatchlistSeries {
  MockRemoveWatchlistSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVSeriesRepository get repository => (super.noSuchMethod(
          Invocation.getter(#repository),
          returnValue:
              _FakeTVSeriesRepository_0(this, Invocation.getter(#repository)))
      as _i2.TVSeriesRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          _i11.TVSeriesDetail? series) =>
      (super.noSuchMethod(Invocation.method(#execute, [series]),
              returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>(
                      this, Invocation.method(#execute, [series]))))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
}

/// A class which mocks [SaveWatchlistSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistSeries extends _i1.Mock
    implements _i16.SaveWatchlistSeries {
  MockSaveWatchlistSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVSeriesRepository get repository => (super.noSuchMethod(
          Invocation.getter(#repository),
          returnValue:
              _FakeTVSeriesRepository_0(this, Invocation.getter(#repository)))
      as _i2.TVSeriesRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(
          _i11.TVSeriesDetail? series) =>
      (super.noSuchMethod(Invocation.method(#execute, [series]),
              returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>(
                      this, Invocation.method(#execute, [series]))))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
}

/// A class which mocks [SearchTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchTVSeries extends _i1.Mock implements _i17.SearchTVSeries {
  MockSearchTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVSeriesRepository get repository => (super.noSuchMethod(
          Invocation.getter(#repository),
          returnValue:
              _FakeTVSeriesRepository_0(this, Invocation.getter(#repository)))
      as _i2.TVSeriesRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>> execute(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#execute, [query]),
              returnValue:
                  _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>>.value(
                      _FakeEither_1<_i6.Failure, List<_i7.TVSeries>>(
                          this, Invocation.method(#execute, [query]))))
          as _i5.Future<_i3.Either<_i6.Failure, List<_i7.TVSeries>>>);
}
